{"version":3,"sources":["components/contactsItem/ContactsItem.module.css","components/filter/Filter.module.css","components/buttons/Button.module.css","components/contactForm/ContactForm.module.css","components/contactList/slide.module.css","components/contactList/ContactList.module.css","components/logo/Logo.module.css","components/container/Container.module.css","components/notification/Notification.module.css","components/notification/slide.module.css","components/slideAppear.module.css","components/filter/pop.module.css","components/buttons/ButtonAdd.js","components/customInput/CustomInput.js","components/contactForm/ContactForm.js","components/buttons/ButtonRemove.js","components/contactsItem/ContactsItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/logo/Logo.js","components/container/Container.js","components/notification/Notification.js","components/App.js","index.js"],"names":["module","exports","ButtonAdd","type","className","styles","Button","useStyles","makeStyles","theme","root","width","textTransform","margin","spacing","CustomInput","name","handleChange","value","classes","TextField","id","uuidv4","variant","label","onChange","ContactForm","state","number","target","setState","handleSubmitForm","event","preventDefault","contact","props","onAddContact","onSubmit","this","form","required","React","Component","minWidth","ButtonRemove","onClick","data-id","color","height","viewBox","fill","xmlns","d","ContactsItem","onRemoveContact","ListItem","Text","Number","e","dataset","ContactsList","contacts","TransitionGroup","component","List","map","el","CSSTransition","key","timeout","classNames","slideStyles","unmountOnExit","Filter","onChangeFilter","FilterWrap","Label","Logo","logo","Container","children","container","Notification","pop","App","filter","error","addContact","newContact","find","setTimeout","prevState","removeContact","contactId","savedContactsInLS","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","toLowerCase","includes","in","appear","slideLogoAppear","length","popFilterStyles","slideNotiAppear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c86ea82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItem\":\"ContactsItem_ListItem__1pVzc\",\"Text\":\"ContactsItem_Text__1EIDt\",\"Number\":\"ContactsItem_Number__1Kp1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterWrap\":\"Filter_FilterWrap__aGvpR\",\"Label\":\"Filter_Label__12-qe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2OIcu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__4XMLi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__35Sk8\",\"enterActive\":\"slide_enterActive__26tgw\",\"exit\":\"slide_exit__2rLq0\",\"exitActive\":\"slide_exitActive__2czte\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__2yFwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__3ocSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2lP46\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pop\":\"Notification_pop__3JF7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__52wIV\",\"enterActive\":\"slide_enterActive__LGqk6\",\"exit\":\"slide_exit__leyB9\",\"exitActive\":\"slide_exitActive__1g23S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"slideAppear_appear__29rG7\",\"appearActive\":\"slideAppear_appearActive__3mw_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__2Ixcj\",\"enterActive\":\"pop_enterActive__14Yna\",\"exit\":\"pop_exit__3wlYc\",\"exitActive\":\"pop_exitActive__1eWKi\"};","import React from 'react';\nimport styles from './Button.module.css';\n\nexport function ButtonAdd() {\n  return (\n    <button type=\"submit\" className={styles.Button}>\n      ADD\n    </button>\n  );\n}\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    textTransform: 'capitalize',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function CustomInput({ name, handleChange, value, type }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <TextField\r\n        id={uuidv4()}\r\n        variant=\"outlined\"\r\n        value={value}\r\n        label={name}\r\n        name={name}\r\n        type={type}\r\n        onChange={handleChange}\r\n        classes={classes}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nCustomInput.propTypes = {\r\n  name: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonAdd } from '../buttons/ButtonAdd';\nimport { CustomInput } from '../customInput/CustomInput';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\n\nexport class ContactForm extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target: { value, name } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmitForm = event => {\n    event.preventDefault();\n    const contact = {\n      name: this.state.name,\n      number: this.state.number,\n      id: uuidv4(),\n    };\n    this.props.onAddContact(contact);\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmitForm} className={styles.form}>\n          <CustomInput\n            label=\"name\"\n            name=\"name\"\n            type=\"text\"\n            value={this.state.name}\n            handleChange={this.handleChange}\n            required\n          />\n          <CustomInput\n            label=\"number\"\n            name=\"number\"\n            type=\"text\"\n            value={this.state.number}\n            handleChange={this.handleChange}\n            required\n          />\n\n          <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n        </form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      minWidth: '0',\r\n    },\r\n  },\r\n}));\r\nexport function ButtonRemove({ type, id, onClick }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      type={type}\r\n      data-id={id}\r\n      onClick={onClick}\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      classes={classes}\r\n    >\r\n      <svg\r\n        width=\"11\"\r\n        height=\"11\"\r\n        viewBox=\"0 0 11 11\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M11 1.10786L9.89214 0L5.5 4.39214L1.10786 0L0 1.10786L4.39214 5.5L0 9.89214L1.10786 11L5.5 6.60786L9.89214 11L11 9.89214L6.60786 5.5L11 1.10786Z\"\r\n          fill=\"white\"\r\n        />\r\n      </svg>\r\n    </Button>\r\n  );\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ButtonRemove } from '../buttons/ButtonRemove';\n\nimport styles from './ContactsItem.module.css';\n\nexport function ContactsItem({\n  contact: { name, number, id },\n  onRemoveContact,\n}) {\n  const handleClick = e => onRemoveContact(e.target.dataset.id);\n\n  return (\n    <li className={styles.ListItem}>\n      <span className={styles.Text}>{name}: </span>\n      <span className={styles.Number}>{number}</span>\n      <ButtonRemove type=\"button\" id={id} onClick={handleClick} />\n    </li>\n  );\n}\n\nContactsItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport slideStyles from './slide.module.css';\nimport { ContactsItem } from '../contactsItem/ContactsItem';\nimport styles from './ContactList.module.css';\n\nexport function ContactsList({ contacts, onRemoveContact }) {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.List}>\n      {contacts.map(el => (\n        <CSSTransition\n          key={el.id}\n          timeout={250}\n          classNames={slideStyles}\n          unmountOnExit\n        >\n          <ContactsItem\n            key={el.id}\n            contact={el}\n            onRemoveContact={onRemoveContact}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CustomInput } from '../customInput/CustomInput';\nimport styles from './Filter.module.css';\n\nexport function Filter({ value, onChangeFilter }) {\n  const handleChange = event => onChangeFilter(event.target.value);\n  return (\n    <div className={styles.FilterWrap}>\n      <label className={styles.Label}>\n        Find contacts by name\n        <CustomInput type=\"search\" value={value} handleChange={handleChange} />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\r\nimport styles from './Logo.module.css';\r\n\r\nexport function Logo() {\r\n  return <h1 className={styles.logo}>Phonebook</h1>;\r\n}\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nexport function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nexport function Notification() {\r\n  return <div className={styles.pop}>Contact is already exists!!!</div>;\r\n}\r\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { ContactForm } from './contactForm/ContactForm';\nimport { ContactsList } from './contactList/ContactList';\nimport { Filter } from './filter/Filter';\nimport { Logo } from './logo/Logo';\nimport { Container } from './container/Container';\nimport { Notification } from './notification/Notification';\nimport slideNotiAppear from './notification/slide.module.css';\nimport slideLogoAppear from './slideAppear.module.css';\nimport popFilterStyles from './filter/pop.module.css';\n\nexport class App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n    error: false,\n  };\n\n  componentDidMount() {\n    const savedContactsInLS = localStorage.getItem('contacts');\n    if (savedContactsInLS) {\n      this.setState({\n        contacts: JSON.parse(savedContactsInLS),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  addContact = newContact => {\n    if (this.state.contacts.find(contact => contact.name === newContact.name)) {\n      this.setState({ error: true });\n      setTimeout(() => {\n        this.setState({ error: false });\n      }, 2500);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, newContact],\n        };\n      });\n    }\n  };\n\n  onChangeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const contacts = this.state.contacts;\n    const filter = this.state.filter;\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter),\n    );\n    return (\n      <>\n        <Container>\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={500}\n            classNames={slideLogoAppear}\n            unmountOnExit\n          >\n            <Logo />\n          </CSSTransition>\n\n          <ContactForm onAddContact={this.addContact}></ContactForm>\n\n          <CSSTransition\n            in={contacts.length > 1}\n            timeout={250}\n            classNames={popFilterStyles}\n            unmountOnExit\n          >\n            <Filter value={filter} onChangeFilter={this.onChangeFilter} />\n          </CSSTransition>\n\n          {contacts.length < 1 && <p>You have no contacts yet</p>}\n\n          <ContactsList\n            contacts={filteredContacts}\n            onRemoveContact={this.removeContact}\n          ></ContactsList>\n          <CSSTransition\n            in={this.state.error}\n            timeout={250}\n            classNames={slideNotiAppear}\n            unmountOnExit\n          >\n            <Notification />\n          </CSSTransition>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}